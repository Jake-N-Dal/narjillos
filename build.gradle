allprojects {
	version = '1.0.0'

	apply plugin: 'java'
	apply plugin: 'application'

	startScripts.enabled = false
	run.enabled = false

	repositories {
		mavenCentral()
	}

	dependencies {
		compile subprojects
		testCompile 'junit:junit:4.11'
	}

	task wrapper(type: Wrapper) {
		gradleVersion = '2.0'
	}
	
	jar {
			// skip empty JARs
	    onlyIf { !sourceSets.main.allSource.files.isEmpty() }
	}

  createStartScript('narjillos', project, 'org.nusco.narjillos.PetriDish', [])
  createStartScript('petri', project, 'org.nusco.narjillos.PetriDish', ['-Xmx4096M', '-Xms4096M'])
  createStartScript('experiment', project, 'org.nusco.narjillos.experiment.Experiment', ['-Xmx4096M', '-Xms4096M'])
}

project(':core') {
	jar {
		baseName = 'narjillos_core'
	}

	dependencies {
		compile 'com.google.code.gson:gson:2.3'
	}
}

project(':petridish') {
	jar {
		baseName = 'narjillos_petridish'
		mainClassName = 'org.nusco.narjillos.PetriDish'
	}

	dependencies {
		compile project(':core')
	}
}

def createStartScript(name, project, mainClass, jvmArgs) {
  def taskName = name + "StartScript"
  project.tasks.create(name: taskName, type: CreateStartScripts) {
    outputDir       = new File(project.buildDir, 'scripts')
    mainClassName   = mainClass
    applicationName = name
    classpath       = project.tasks[JavaPlugin.JAR_TASK_NAME].outputs.files + project.configurations.runtime
    applicationDefaultJvmArgs = jvmArgs
  }
	
  project.tasks[taskName].dependsOn(project.jar)

  project.applicationDistribution.with {
    into("bin") {
      from(project.tasks[taskName])
      fileMode = 0755
    }
  }
}
